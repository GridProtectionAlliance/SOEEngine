@*******************************************************************************************************
    //  Home.cshtml - Gbtc
    //
    //  Copyright © 2016, Grid Protection Alliance.  All Rights Reserved.
    //
    //  Licensed to the Grid Protection Alliance (GPA) under one or more contributor license agreements. See
    //  the NOTICE file distributed with this work for additional information regarding copyright ownership.
    //  The GPA licenses this file to you under the MIT License (MIT), the "License"; you may not use this
    //  file except in compliance with the License. You may obtain a copy of the License at:
    //
    //      http://opensource.org/licenses/MIT
    //
    //  Unless agreed to in writing, the subject software distributed under the License is distributed on an
    //  "AS-IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. Refer to the
    //  License for the specific language governing permissions and limitations.
    //
    //  Code Modification History:
    //  ----------------------------------------------------------------------------------------------------
    //  01/22/2016 - J. Ritchie Carroll
    //       Generated original version of source code.
    //
    //*****************************************************************************************************@
@using GSF.Web
@using SOE.Model
@using RazorEngine.Templating

@inherits TemplateBase<AppModel>
@{
    // DataContext is the "database connection" that is available for the page, you can
    // use direct database calls, e.g., dataContect.Connection.RetrieveData(...) or you
    // can use model based table operations, e.g., dataContext.Table<Page>().LoadRecord(id)
    List<int> counts = ViewBag.counts ?? new List<int>();
    List<int> faults = ViewBag.faults ?? new List<int>();
    List<int> faultsLG = ViewBag.faultsLG ?? new List<int>();
    List<int> faultsLL = ViewBag.faultsLL ?? new List<int>();
    List<int> faultsLLL = ViewBag.faultsLLL ?? new List<int>();
    List<int> volts = ViewBag.volts ?? new List<int>();
    List<int> voltsags = ViewBag.voltsags ?? new List<int>();
    List<int> voltswells = ViewBag.voltswells ?? new List<int>();

    List<int> others = ViewBag.others ?? new List<int>();
    //ValueList[] timeWindows = ViewBag.timeWindows ?? new ValueList[0];



}
@section StyleSheets {
    @* Include any page specific style sheets here, these will be added to page header *@
}
@section Scripts {
    @* Include any page specific scripts here, these will be added to scripts at bottom of page *@
}

<script src="~/Scripts/react/react.js"></script>
<script src="~/Scripts/react/react-dom.js"></script>
<script src="~/Scripts/react/remarkable.js"></script>

<div id="content"></div>
<script>
    @*var cols = [{key:'Type', label: 'Type'}].concat((@Raw(Json.Encode(timeWindows))).map(a => { return {key: a.Text, label: a.Text}}));*@
    var data = [
        {id: 1, Type: 'All Time', '24 Hrs':0, '7 Days':0, '30 Days':0, '90 Days':0},
        {id: 2, Type: 'Faults', '24 Hrs':0, '7 Days':0, '30 Days':0, '90 Days':0},
        {id: 3, Type: 'L-G/L-L-G/L-L-L-G', '24 Hrs':0, '7 Days':0, '30 Days':0, '90 Days':0},
        {id: 4, Type: 'L-L', '24 Hrs':0, '7 Days':0, '30 Days':0, '90 Days':0},
        {id: 5, Type: 'L-L-L', '24 Hrs':0, '7 Days':0, '30 Days':0, '90 Days':0},

    ]    
</script>

<script src="~/Scripts/JSX/Table.js"></script>
<script src="~/Scripts/JSX/Default.js"></script>