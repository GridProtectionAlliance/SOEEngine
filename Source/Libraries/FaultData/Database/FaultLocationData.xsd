<?xml version="1.0" encoding="utf-8"?>
<xs:schema id="FaultLocationData" targetNamespace="http://tempuri.org/FaultLocationData.xsd" xmlns:mstns="http://tempuri.org/FaultLocationData.xsd" xmlns="http://tempuri.org/FaultLocationData.xsd" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata" xmlns:msprop="urn:schemas-microsoft-com:xml-msprop" attributeFormDefault="qualified" elementFormDefault="qualified">
  <xs:annotation>
    <xs:appinfo source="urn:schemas-microsoft-com:xml-msdatasource">
      <DataSource DefaultConnectionIndex="1" FunctionsComponentName="QueriesTableAdapter" Modifier="AutoLayout, AnsiClass, Class, Public" SchemaSerializationMode="IncludeSchema" xmlns="urn:schemas-microsoft-com:xml-msdatasource">
        <Connections>
          <Connection AppSettingsObjectName="Settings" AppSettingsPropertyName="MeterDBConnectionString" IsAppSettingsProperty="true" Modifier="Public" Name="MeterDBConnectionString (Settings)" ParameterPrefix="@" PropertyReference="ApplicationSettings.FaultData.Properties.Settings.GlobalReference.Default.MeterDBConnectionString" Provider="System.Data.SqlClient" />
          <Connection AppSettingsObjectName="Settings" AppSettingsPropertyName="MeterDBConnectionString1" ConnectionStringObject="" IsAppSettingsProperty="true" Modifier="Assembly" Name="MeterDBConnectionString1 (Settings)" ParameterPrefix="@" PropertyReference="ApplicationSettings.FaultData.Properties.Settings.GlobalReference.Default.MeterDBConnectionString1" Provider="System.Data.SqlClient" />
        </Connections>
        <Tables>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="FaultCurveTableAdapter" GeneratorDataComponentClassName="FaultCurveTableAdapter" Name="FaultCurve" UserDataComponentName="FaultCurveTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="MeterDBConnectionString (Settings)" DbObjectName="MeterDB.dbo.FaultCurve" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[FaultCurve] WHERE (([ID] = @Original_ID) AND ([EventID] = @Original_EventID) AND ([Algorithm] = @Original_Algorithm))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_ID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="ID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_EventID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="EventID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_Algorithm" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="Algorithm" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[FaultCurve] ([EventID], [Algorithm], [Data]) VALUES (@EventID, @Algorithm, @Data);
SELECT ID, EventID, Algorithm, Data FROM FaultCurve WHERE (ID = SCOPE_IDENTITY())</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@EventID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="EventID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Algorithm" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="Algorithm" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Binary" Direction="Input" ParameterName="@Data" Precision="0" ProviderType="VarBinary" Scale="0" Size="0" SourceColumn="Data" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT ID, EventID, Algorithm, Data FROM dbo.FaultCurve</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[FaultCurve] SET [EventID] = @EventID, [Algorithm] = @Algorithm, [Data] = @Data WHERE (([ID] = @Original_ID) AND ([EventID] = @Original_EventID) AND ([Algorithm] = @Original_Algorithm));
SELECT ID, EventID, Algorithm, Data FROM FaultCurve WHERE (ID = @ID)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@EventID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="EventID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Algorithm" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="Algorithm" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Binary" Direction="Input" ParameterName="@Data" Precision="0" ProviderType="VarBinary" Scale="0" Size="0" SourceColumn="Data" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_ID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="ID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_EventID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="EventID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_Algorithm" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="Algorithm" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="ID" ColumnName="ID" DataSourceName="" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@ID" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="ID" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="ID" DataSetColumn="ID" />
              <Mapping SourceColumn="EventID" DataSetColumn="EventID" />
              <Mapping SourceColumn="Algorithm" DataSetColumn="Algorithm" />
              <Mapping SourceColumn="Data" DataSetColumn="Data" />
            </Mappings>
            <Sources>
              <DbSource ConnectionRef="MeterDBConnectionString (Settings)" DbObjectName="MeterDB.dbo.FaultCurve" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="FillBy" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetDataBy" GeneratorSourceName="FillBy" GetMethodModifier="Public" GetMethodName="GetDataBy" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetDataBy" UserSourceName="FillBy">
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>SELECT ID, EventID, Algorithm, Data FROM dbo.FaultCurve WHERE EventID = @eventID</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="eventID" ColumnName="EventID" DataSourceName="MeterDB.dbo.FaultCurve" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@eventID" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="EventID" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </SelectCommand>
              </DbSource>
            </Sources>
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="CycleDataTableAdapter" GeneratorDataComponentClassName="CycleDataTableAdapter" Name="CycleData" UserDataComponentName="CycleDataTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="MeterDBConnectionString1 (Settings)" DbObjectName="MeterDB.dbo.CycleData" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[CycleData] WHERE (([ID] = @Original_ID) AND ([EventID] = @Original_EventID))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_ID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="ID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_EventID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="EventID" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[CycleData] ([EventID], [Data]) VALUES (@EventID, @Data);
SELECT ID, EventID, Data FROM CycleData WHERE (ID = SCOPE_IDENTITY())</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@EventID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="EventID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Binary" Direction="Input" ParameterName="@Data" Precision="0" ProviderType="VarBinary" Scale="0" Size="0" SourceColumn="Data" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT ID, EventID, Data FROM dbo.CycleData</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[CycleData] SET [EventID] = @EventID, [Data] = @Data WHERE (([ID] = @Original_ID) AND ([EventID] = @Original_EventID));
SELECT ID, EventID, Data FROM CycleData WHERE (ID = @ID)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@EventID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="EventID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Binary" Direction="Input" ParameterName="@Data" Precision="0" ProviderType="VarBinary" Scale="0" Size="0" SourceColumn="Data" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_ID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="ID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_EventID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="EventID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="ID" ColumnName="ID" DataSourceName="" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@ID" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="ID" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="ID" DataSetColumn="ID" />
              <Mapping SourceColumn="EventID" DataSetColumn="EventID" />
              <Mapping SourceColumn="Data" DataSetColumn="Data" />
            </Mappings>
            <Sources>
              <DbSource ConnectionRef="MeterDBConnectionString1 (Settings)" DbObjectName="MeterDB.dbo.CycleData" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="FillBy" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetDataBy" GeneratorSourceName="FillBy" GetMethodModifier="Public" GetMethodName="GetDataBy" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetDataBy" UserSourceName="FillBy">
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>SELECT ID, EventID, Data FROM dbo.CycleData WHERE EventID = @eventID</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="eventID" ColumnName="EventID" DataSourceName="MeterDB.dbo.CycleData" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@eventID" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="EventID" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </SelectCommand>
              </DbSource>
            </Sources>
          </TableAdapter>
        </Tables>
        <Sources />
      </DataSource>
    </xs:appinfo>
  </xs:annotation>
  <xs:element name="FaultLocationData" msdata:IsDataSet="true" msdata:UseCurrentLocale="true" msprop:EnableTableAdapterManager="true" msprop:Generator_DataSetName="FaultLocationData" msprop:Generator_UserDSName="FaultLocationData">
    <xs:complexType>
      <xs:choice minOccurs="0" maxOccurs="unbounded">
        <xs:element name="FaultCurve" msprop:Generator_TableClassName="FaultCurveDataTable" msprop:Generator_TableVarName="tableFaultCurve" msprop:Generator_RowChangedName="FaultCurveRowChanged" msprop:Generator_TablePropName="FaultCurve" msprop:Generator_RowDeletingName="FaultCurveRowDeleting" msprop:Generator_RowChangingName="FaultCurveRowChanging" msprop:Generator_RowEvHandlerName="FaultCurveRowChangeEventHandler" msprop:Generator_RowDeletedName="FaultCurveRowDeleted" msprop:Generator_RowClassName="FaultCurveRow" msprop:Generator_UserTableName="FaultCurve" msprop:Generator_RowEvArgName="FaultCurveRowChangeEvent">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="ID" msdata:ReadOnly="true" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_ColumnVarNameInTable="columnID" msprop:Generator_ColumnPropNameInRow="ID" msprop:Generator_ColumnPropNameInTable="IDColumn" msprop:Generator_UserColumnName="ID" type="xs:int" />
              <xs:element name="EventID" msprop:Generator_ColumnVarNameInTable="columnEventID" msprop:Generator_ColumnPropNameInRow="EventID" msprop:Generator_ColumnPropNameInTable="EventIDColumn" msprop:Generator_UserColumnName="EventID" type="xs:int" />
              <xs:element name="Algorithm" msprop:Generator_ColumnVarNameInTable="columnAlgorithm" msprop:Generator_ColumnPropNameInRow="Algorithm" msprop:Generator_ColumnPropNameInTable="AlgorithmColumn" msprop:Generator_UserColumnName="Algorithm">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="80" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="Data" msprop:Generator_ColumnVarNameInTable="columnData" msprop:Generator_ColumnPropNameInRow="Data" msprop:Generator_ColumnPropNameInTable="DataColumn" msprop:Generator_UserColumnName="Data" type="xs:base64Binary" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="CycleData" msprop:Generator_TableClassName="CycleDataDataTable" msprop:Generator_TableVarName="tableCycleData" msprop:Generator_TablePropName="CycleData" msprop:Generator_RowDeletingName="CycleDataRowDeleting" msprop:Generator_RowChangingName="CycleDataRowChanging" msprop:Generator_RowEvHandlerName="CycleDataRowChangeEventHandler" msprop:Generator_RowDeletedName="CycleDataRowDeleted" msprop:Generator_UserTableName="CycleData" msprop:Generator_RowChangedName="CycleDataRowChanged" msprop:Generator_RowEvArgName="CycleDataRowChangeEvent" msprop:Generator_RowClassName="CycleDataRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="ID" msdata:ReadOnly="true" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_ColumnVarNameInTable="columnID" msprop:Generator_ColumnPropNameInRow="ID" msprop:Generator_ColumnPropNameInTable="IDColumn" msprop:Generator_UserColumnName="ID" type="xs:int" />
              <xs:element name="EventID" msprop:Generator_ColumnVarNameInTable="columnEventID" msprop:Generator_ColumnPropNameInRow="EventID" msprop:Generator_ColumnPropNameInTable="EventIDColumn" msprop:Generator_UserColumnName="EventID" type="xs:int" />
              <xs:element name="Data" msprop:Generator_ColumnVarNameInTable="columnData" msprop:Generator_ColumnPropNameInRow="Data" msprop:Generator_ColumnPropNameInTable="DataColumn" msprop:Generator_UserColumnName="Data" type="xs:base64Binary" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
      </xs:choice>
    </xs:complexType>
    <xs:unique name="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:FaultCurve" />
      <xs:field xpath="mstns:ID" />
    </xs:unique>
    <xs:unique name="CycleData_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:CycleData" />
      <xs:field xpath="mstns:ID" />
    </xs:unique>
  </xs:element>
</xs:schema>